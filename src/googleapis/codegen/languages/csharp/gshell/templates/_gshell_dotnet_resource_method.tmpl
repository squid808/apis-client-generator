{% comment %}


There can be two types of methods wrapping the normal google methods - those that return paged results and those that do
not. The paged methods are discerned by the presence of the pageToken parameter, and so we added a property to the
method to allow us to easily see if this needs to be a paged method or not.

Paged methods allow gShell to accept a parameter of 'properties' for any non-required parameters, and also custom params
like a Function<> for a progress bar, and a TotalResults.


{% endcomment %}

{% doc_comment_if method.description %}
{% noblank %}
{% filter block_comment %}
{% if method.requestType %}/// <param name="{{ method.requestType.className }}Body">The body of the request.</param>{% eol %}{% endif %}
{% endfilter %}
{% filter block_comment %}
{% for param in method.requiredParameters %}/// <param name="{% camel_case param.codeName %}">{{ param.description }}</param>{% eol %}{% endfor %}
{% endfilter %}
{% filter block_comment %}
{% if method.optionalParameters|length > 0 %}/// <param name="properties">The optional properties for this method.</param>{% eol %}{% endif %}
{% endfilter %}
{% filter block_comment %}
/// <param name="gShellServiceAccount">The optional email address the service account should impersonate.</param>{% eol %}
{% endfilter %}
{% endnoblank %}{% if method.isPageable %}{% noeol %}{% noblank %}
public List<{{ api.module.name }}.Data.{{ method.finalReturnType }}> {{ method.className }}(
    {% eol %}{% indent %}{% call_template _gshell_dotnet_methodparams method=method showCustomProperties=True includeSvcAcctInCall=False%}){% endindent %}
{% endnoblank %}{% endnoeol %}
{
    var results = new List<{{ api.module.name }}.Data.{{ method.finalReturnType }}>();

    {% noeol %}{% noblank %}
    {{ api.versionNoDots }}.{% if resource.parentResourceResourceChain %}{{ resource.parentResourceResourceChain }}{% endif %}{{ resource.className }}Resource.{{ method.className }}Request request = GetService().
    {{ resource.parentResourceChain }}{{ resource.className }}.{{ method.className }}(
    {% if method.parameters %}{% call_template _gshell_dotnet_methodparams method=method hideTypes=True %}{% endif %});
    {% endnoblank %}{% endnoeol %}

    {% if method.optionalParameters|length > 0 %}if (properties != null)
    {{% noeol %}{% noblank %}{% eol %}

        {% for p in method.optionalParameters %}
        {% if not p.codeName == "pageToken" %}
        request.{% if p.enumType %}{% camel_case p.codeName %}{% else %}{% camel_case p.codeName %}{% endif %} = properties.{% camel_case p.codeName %};{% eol %}
        {% endif %}{% endfor %}
        {% endnoblank %}{% endnoeol %}
    }{% endif %}

    if (null != properties.StartProgressBar)
    {
        properties.StartProgressBar("Gathering {{ resource.className }}",
            string.Format("-Collecting {{ resource.className }} page 1"));
    }

    {{ api.module.name }}.Data.{{ method.finalReturnType }} pagedResult = request.Execute();

    if (pagedResult != null)
    {
        results.Add(pagedResult);

        while (!string.IsNullOrWhiteSpace(pagedResult.NextPageToken) &&
            pagedResult.NextPageToken != request.PageToken &&
        (properties.TotalResults == 0 || results.Count < properties.TotalResults))
        {
            request.PageToken = pagedResult.NextPageToken;

            if (null != properties.UpdateProgressBar)
            {
                properties.UpdateProgressBar(5, 10, "Gathering {{ resource.className }}",
                        string.Format("-Collecting {{ resource.className }} page {0}",
                            (results.Count + 1).ToString()));
            }
            pagedResult = request.Execute();
            results.Add(pagedResult);
        }

        if (null != properties.UpdateProgressBar)
        {
            properties.UpdateProgressBar(1, 2, "Gathering {{ resource.className }}",
                    string.Format("-Returning {0} pages.", results.Count.ToString()));
        }
    }

    return results;
}

{% else %}{# NOT PAGEABLE #}{% noeol %}
public {% if method.finalReturnType %}{{ api.module.name }}.Data.{{ method.finalReturnType }}{% else %}void{% endif %}{% sp %}{{ method.className }} (
{% call_template _gshell_dotnet_methodparams method=method showCustomProperties=True includeSvcAcctInCall=False %}
)
{% endnoeol %}
{
{% noeol %}{% indent %}

{% noeol %}{% noblank %}
var request = GetService().
{{ resource.parentResourceChain }}{{ resource.className }}.{{ method.className }}(
{% call_template _gshell_dotnet_methodparams method=method hideTypes=True %});
{% endnoblank %}{% endnoeol %}{% eol %}
{% eol %}
{% if method.optionalParameters|length > 0 %}if (properties != null)
{{% noeol %}{% noblank %}{% eol %}

        {% for p in method.optionalParameters %}
        {% if not p.codeName == "pageToken" %}
        request.{% if p.enumType %}{% camel_case p.codeName %}{% else %}{% camel_case p.codeName %}{% endif %} = properties.{% camel_case p.codeName %};{% eol %}
        {% endif %}{% endfor %}
        {% endnoblank %}{% endnoeol %}
}{% endif %}{% eol %}{% eol %}

{% if method.finalReturnType %}return {% endif %}request.Execute();{% eol %}
{% endindent %}
}
{% eol %}
{% endnoeol %}

{% if method.supportsMediaUpload %}{% noeol %}
public void {{ method.className }} (
{% call_template _gshell_dotnet_methodparams method=method showCustomProperties=True includeSvcAcctInCall=False supportMediaUpload=True %}
)
{% endnoeol %}
{
{% noeol %}{% indent %}
{% noeol %}{% noblank %}
var request = GetService().
{{ resource.parentResourceChain }}{{ resource.className }}.{{ method.className }}(
{% call_template _gshell_dotnet_methodparams method=method hideTypes=True  supportMediaUpload=True%});
{% endnoblank %}{% endnoeol %}{% eol %}
{% eol %}
{% if method.optionalParameters|length > 0 %}if (properties != null)
{{% noeol %}{% noblank %}{% eol %}

        {% for p in method.optionalParameters %}
        {% if not p.codeName == "pageToken" %}
        request.{% if p.enumType %}{% camel_case p.codeName %}{% else %}{% camel_case p.codeName %}{% endif %} = properties.{% camel_case p.codeName %};{% eol %}
        {% endif %}{% endfor %}
        {% endnoblank %}{% endnoeol %}
}{% endif %}{% eol %}{% eol %}

request.Upload();{% eol %}
{% endindent %}
}
{% endnoeol %}
{% endif %}
{% endif %}